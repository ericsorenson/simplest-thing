import React, { useState, useEffect } from 'react';
import { createRoot } from 'react-dom/client';

// ideally these types are autogenerated from OpenAPI docs
type Claim = {
  id: string;
};

// the beginnings of a Gateway
const getClaim = () => {
  return { id: '8bdbd3eb-59e3-4d64-b973-4230e6f5ea80' };
};

// contract for views as pure functions
type ClaimViewProps = {
  claim: Claim;
};

// pure function view without state management or business logic dependencies
const ClaimView = (props: ClaimViewProps) => {
  return <p>Claim ID: {props.claim?.id}</p>;
};

// Higher Order Component to connect view and state manager
const ClaimViewHOC = () => {
  const [claim, setClaim] = useState<Claim>(undefined);

  useEffect(() => {
    setClaim(getClaim());
  });

  return <ClaimView claim={claim} />;
};

// application main
const App = () => {
  return (
    <>
      <h1>Simplest Thing</h1>
      <ClaimViewHOC />
    </>
  );
};

// add the application to an HTML file
const container = document.getElementById('app');
const root = createRoot(container);
root.render(<App />);
